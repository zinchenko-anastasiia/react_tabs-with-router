{"version":3,"sources":["components/PageNavLink.tsx","components/Tabs.tsx","components/TabsPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","end","className","isActive","classNames","Tabs","tabs","selectedTabId","tab","id","selectedTabContent","find","map","title","content","TabsPage","tabId","useParams","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gPASaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,IAAaC,WAAb,gBAC1C,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CAAE,8BAA+BD,KACnCJ,GAAIA,EACJE,IAAKA,EAJP,SAMGD,KCRQK,EAAwB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACtCJ,EAAW,SAACK,GAAD,OAAcA,EAAIC,KAAOF,GACpCG,EAAqBJ,EAAKK,MAAK,SAAAH,GAAG,OAAIA,EAAIC,KAAOF,KAEvD,OACE,qCACE,qBAAKL,UAAU,gBAAf,SACE,6BACGI,EAAKM,KAAI,SAACJ,GAAD,OACR,oBAEE,UAAQ,MACRN,UAAWE,IACT,CACE,YAAaD,EAASK,KAL5B,SASE,cAAC,IAAD,CACET,GAAE,aAAQS,EAAIC,IADhB,SAGGD,EAAIK,SAXFL,EAAIC,WAiBjB,qBAAKP,UAAU,QAAQ,UAAQ,aAA/B,SAEIK,EAAa,OACRG,QADQ,IACRA,OADQ,EACRA,EAAoBI,QACrB,4BC/BDC,EAA4B,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAClCU,EAAUC,cAAVD,MAER,OACE,qCACE,oBAAId,UAAU,QAAd,uBACA,cAAC,EAAD,CACEI,KAAMA,EACNC,cAAeS,QCLjBV,EAAO,CACX,CAAEG,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BI,EAAM,kBACjB,qCACE,qBACEhB,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEH,GAAG,IACHC,KAAK,YACLC,KAAG,IAGL,cAAC,EAAD,CACEF,GAAG,QACHC,KAAK,qBAMb,qBAAKE,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEiB,KAAK,IACLC,QAAS,oBAAIlB,UAAU,QAAd,uBAFX,SAIE,cAAC,IAAD,CACEiB,KAAK,OACLC,QAAS,cAAC,IAAD,CAAUrB,GAAG,IAAIsB,SAAO,QAIrC,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,CAAUd,KAAMA,MACtC,cAAC,IAAD,CAAOa,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUd,KAAMA,SAEhD,cAAC,IAAD,CACEa,KAAK,IACLC,QAAS,oBAAIlB,UAAU,QAAd,yCCtDrBqB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d80e154.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  text: string,\n  end?: boolean,\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, text, end = false }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n    to={to}\n    end={end}\n  >\n    {text}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string | undefined\n}\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTabId }) => {\n  const isActive = (tab: Tab) => tab.id === selectedTabId;\n  const selectedTabContent = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab: Tab) => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames(\n                {\n                  'is-active': isActive(tab),\n                },\n              )}\n            >\n              <Link\n                to={`../${tab.id}`}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          selectedTabId\n            ? (selectedTabContent?.content)\n            : 'Please select a tab'\n        }\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\nimport { Tabs } from './Tabs';\n\ninterface Props {\n  tabs: Tab[],\n}\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={tabId}\n      />\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { PageNavLink } from './components/PageNavLink';\nimport { TabsPage } from './components/TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => (\n  <>\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink\n            to=\"/\"\n            text=\"Home page\"\n            end\n          />\n\n          <PageNavLink\n            to=\"/tabs\"\n            text=\"Tabs page\"\n          />\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          >\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Route>\n\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage tabs={tabs} />} />\n            <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}